#XY

Reading Data

TrainLink<- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv"
TestLink  <- "https://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv"

TrainFile<-"pml-traininig.csv"
TestFile<-"pml-testing.csv"

download.file(TrainLink,destfile = TrainFile)
download.file(TestLink, destfile = TestFile)

TrainData <- read.csv(TrainFile)
TestData  <- read.csv(TestFile)

Partitioning and Cleaning Dataset

library(caret)

# create a partition using caret with the training dataset on 70,30 ratio
PartitionTrain  <- createDataPartition(TrainData$classe, p=0.7, list=FALSE)
Train <- TrainData[PartitionTrain, ]
Test  <- TrainData[-PartitionTrain, ]

# remove variables with Nearly Zero Variance
NearZeroVar <- nearZeroVar(Train)
Train <- Train[, -NearZeroVar]
Test  <- Test[, -NearZeroVar]
dim(TestSet)

# remove variables that are mostly NA
FullNA    <- sapply(Train, function(x) mean(is.na(x))) > 0.95
Train <- Train[, FullNA==FALSE]
Test  <- Test[, FullNA==FALSE]

# remove identification only variables (columns 1 to 5)
Train <- Train[, -(1:5)]
Test  <- Test[, -(1:5)]


Prediction Model Building with Random Forest

library(randomForest)
library(rpart)
library(rpart.plot)

set.seed(666)
RF <- trainControl(method="cv", number=3, verboseIter=FALSE)
FitRandForest <- train(classe ~ ., data=Train, method="rf", trControl=RF)
FitRandForest$finalModel


Prediction on Test dataset

predictRF <- predict(FitRandForest, newdata=Test)
confMatRF <- confusionMatrix(predictRF, Test$classe)
confMatRF

# plot matrix results
plot(confMatRF$table, col = confMatRF$byClass, main = paste("Random Forest - Accuracy =",
     round(confMatRF$overall['Accuracy'], 4)))
